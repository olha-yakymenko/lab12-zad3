name: Build and Push Multiarch Docker Image

on:
  push:
    branches: [main]

jobs:
  linux_amd64:
  name: Build and push Linux AMD64 image
  runs-on: ubuntu-latest
  steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build AMD64 image (no push yet)
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        load: true 
        tags: olhaya/os-greeter:linux-amd64
        build-args: |
          BASE_IMAGE=python:3.12-slim

    - name: Push manually
      run: docker push olhaya/os-greeter:linux-amd64


  linux_arm64:
    name: Build and push Linux ARM64 image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push ARM64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64
          push: true
          tags: olhaya/os-greeter:linux-arm64
          build-args: |
            BASE_IMAGE=python:3.12-slim

  windows:
    name: Build and push Windows image
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Windows image
        run: |
          docker build -f Dockerfile `
            --build-arg BASE_IMAGE=mcr.microsoft.com/windows/nanoserver:ltsc2022 `
            -t olhaya/os-greeter:windows-amd64 `
            .
          docker push olhaya/os-greeter:windows-amd64

  manifest:
    name: Create and push multiarch manifest
    needs: [linux_amd64, linux_arm64, windows]
    runs-on: ubuntu-latest
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Create manifest
        run: |
          docker manifest create olhaya/os-greeter:latest \
            --amend olhaya/os-greeter:linux-amd64 \
            --amend olhaya/os-greeter:linux-arm64 \
            --amend olhaya/os-greeter:windows-amd64

      - name: Push manifest
        run: |
          docker manifest push olhaya/os-greeter:latest

      - name: Inspect manifest
        run: |
          docker manifest inspect olhaya/os-greeter:latest
